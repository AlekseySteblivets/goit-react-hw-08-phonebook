{"version":3,"sources":["redux/phonebooks/phonebooks-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/Navigation.js","components/UserMenu/AuthNav.js","components/UserMenu/UserMenu.js","components/UserMenu/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/phonebooks/phonebooks-reducer.js","redux/phonebooks/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","getCurrentUser","dispatch","getState","a","persistedToken","auth","get","response","data","massage","login","credentials","post","message","register","logout","getIsAuthenticated","state","getUserName","connect","authSelectors","to","exact","AuthNav","mapDispatchToProps","onLogout","authOperations","avatar","src","alt","width","type","onClick","styles","header","display","justifyContent","alingItems","borderBotton","style","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onGetCurrentUser","fallback","path","items","filter","contact","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebooksReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db6717c1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('phonebooks/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('phonebooks/fetchContactSuccess');\r\nexport const fetchContactError = createAction('phonebooks/fetchContactError');\r\n\r\n\r\n\r\nexport const addContactRequest = createAction('phonebooks/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebooks/addContactSuccess');\r\nexport const addContactError = createAction('phonebooks/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('phonebooks/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('phonebooks/deleteContactSuccess');\r\nexport const deleteContactError = createAction('phonebooks/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('phonebooks/changeFilter')\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: (_, { payload }) => payload,\r\n    [authActions.loginError]: (_, { payload }) => payload,\r\n    [authActions.logoutError]: (_, { payload }) => payload,\r\n    [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message));\r\n\r\n    }\r\n\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data))\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message));\r\n    }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.massage));\r\n    }\r\n};\r\n\r\nexport default { getCurrentUser, login, register, logout };","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\n\r\nexport default { getIsAuthenticated, getUserName };\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <div>\r\n        <NavLink to=\"/\" exact> Главная</NavLink>\r\n        {isAuthenticated && (\r\n            <NavLink to=\"/contacts\"> Заметки\r\n            </NavLink>)}\r\n\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\nexport default connect(mapStateToProps)(Navigation);","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink to=\"/register\" exact> Регистрация</NavLink>\r\n        <NavLink to=\"/login\"> Логин</NavLink>\r\n    </div>\r\n)\r\n\r\nexport default AuthNav;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n    <div>\r\n        <img src={avatar} alt=\"\" width=\"32\" />\r\n        <span>Welcome, {name}</span>\r\n        <button type=\"button\" onClick={onLogout}>Выйти</button>\r\n    </div>\r\n\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n    name: authSelectors.getUserName(state),\r\n    // avatar:\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    onLogout: authOperations.logout,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\nconst styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alingItems: 'center',\r\n        borderBotton: '1px, solid #2A363B',\r\n    },\r\n}\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n    <header style={styles.header} >\r\n        <Navigation />\r\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n);\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props =>\r\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { authSelectors } from '../../redux/auth';\r\n\r\n\r\n\r\nconst PublicRoute = ({\r\n    component: Component,\r\n    isAuthenticated,\r\n    redirectTo,\r\n    ...routeProps\r\n}) => (\r\n    <Route\r\n        {...routeProps}\r\n        render={props => isAuthenticated && routeProps.restricted ? (\r\n            <Redirect to={redirectTo} />\r\n        ) : (\r\n            <Component {...props} />\r\n        )\r\n        }\r\n    />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from './components/UserMenu/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst Contacts = lazy(() => import('./views/Contacts'));\n\nclass App extends Component {\n  state = {\n  }\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading page...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n\n\n      </div>\n    )\n  }\n\n}\n\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    changeFilter,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n} from './phonebooks-actions';\r\n\r\n\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(contact =>\r\n        contact.id !== payload),\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n})\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from 'redux-logger';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER\r\n} from 'redux-persist';\r\nimport phonebooksReducer from \"./phonebooks-reducer\";\r\nimport { authReducer } from \"../auth\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n}),\r\n    // myMiddleware,\r\n    logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token'],\r\n\r\n};\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: phonebooksReducer,\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/phonebooks/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}